{"version":3,"sources":["webpack://keen/../demo1/src/js/pages/custom/inbox/inbox.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qBAAqB;AACrB;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2CAA2C;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA,2DAA2D;AAC3D,2DAA2D;;AAE3D;AACA;;AAEA;AACA,iBAAiB;AACjB,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;;AAEA,oDAAoD,OAAO;AAC3D;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;;AAEjB;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB;AACjB,aAAa;;AAEb;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA;AACA,SAAS;;AAET;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC","file":"js/pages/custom/inbox/inbox.js","sourcesContent":["\"use strict\";\n\n// Class definition\nvar KTAppInbox = function() {\n    // Private properties\n    var _asideEl;\n    var _listEl;\n    var _viewEl;\n    var _composeEl;\n    var _replyEl;\n    var _asideOffcanvas;\n\n    // Private methods\n    var _initEditor = function(form, editor) {\n        // init editor\n        var options = {\n            modules: {\n                toolbar: {}\n            },\n            placeholder: 'Type message...',\n            theme: 'snow'\n        };\n\n        // Init editor\n        var editor = new Quill('#' + editor, options);\n\n        // Customize editor\n        var toolbar = KTUtil.find(form, '.ql-toolbar');\n        var editor = KTUtil.find(form, '.ql-editor');\n\n        if (toolbar) {\n            KTUtil.addClass(toolbar, 'px-5 border-top-0 border-left-0 border-right-0');\n        }\n\n        if (editor) {\n            KTUtil.addClass(editor, 'px-8');\n        }\n    }\n\n    var _initForm = function(formEl) {\n        var formEl = KTUtil.getById(formEl);\n\n        // Init autocompletes\n        var toEl = KTUtil.find(formEl, '[name=compose_to]');\n        var tagifyTo = new Tagify(toEl, {\n            delimiters: \", \", // add new tags when a comma or a space character is entered\n            maxTags: 10,\n            blacklist: [\"fuck\", \"shit\", \"pussy\"],\n            keepInvalidTags: true, // do not remove invalid tags (but keep them marked as invalid)\n            whitelist: [{\n                value: 'Chris Muller',\n                email: 'chris.muller@wix.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-11.jpg',\n                class: 'tagify__tag--primary'\n            }, {\n                value: 'Nick Bold',\n                email: 'nick.seo@gmail.com',\n                initials: 'SS',\n                initialsState: 'warning',\n                pic: ''\n            }, {\n                value: 'Alon Silko',\n                email: 'alon@keenthemes.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-6.jpg'\n            }, {\n                value: 'Sam Seanic',\n                email: 'sam.senic@loop.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-8.jpg'\n            }, {\n                value: 'Sara Loran',\n                email: 'sara.loran@tilda.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-9.jpg'\n            }, {\n                value: 'Eric Davok',\n                email: 'davok@mix.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-13.jpg'\n            }, {\n                value: 'Sam Seanic',\n                email: 'sam.senic@loop.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-13.jpg'\n            }, {\n                value: 'Lina Nilson',\n                email: 'lina.nilson@loop.com',\n                initials: 'LN',\n                initialsState: 'danger',\n                pic: './assets/media/users/150-15.jpg'\n            }],\n            templates: {\n                dropdownItem: function(tagData) {\n                    try {\n                        var html = '';\n\n                        html += '<div class=\"tagify__dropdown__item\">';\n                        html += '   <div class=\"d-flex align-items-center\">';\n                        html += '       <span class=\"symbol sumbol-' + (tagData.initialsState ? tagData.initialsState : '') + ' mr-2\">';\n                        html += '           <span class=\"symbol-label\" style=\"background-image: url(\\''+ (tagData.pic ? tagData.pic : '') + '\\')\">' + (tagData.initials ? tagData.initials : '') + '</span>';\n                        html += '       </span>';\n                        html += '       <div class=\"d-flex flex-column\">';\n                        html += '           <a href=\"#\" class=\"text-dark-75 text-hover-primary font-weight-bold\">'+ (tagData.value ? tagData.value : '') + '</a>';\n                        html += '           <span class=\"text-muted font-weight-bold\">' + (tagData.email ? tagData.email : '') + '</span>';\n                        html += '       </div>';\n                        html += '   </div>';\n                        html += '</div>';\n\n                        return html;\n                    } catch (err) {}\n                }\n            },\n            transformTag: function(tagData) {\n                tagData.class = 'tagify__tag tagify__tag--primary';\n            },\n            dropdown: {\n                classname: \"color-blue\",\n                enabled: 1,\n                maxItems: 5\n            }\n        });\n\n        var ccEl = KTUtil.find(formEl, '[name=compose_cc]');\n        var tagifyCc = new Tagify(ccEl, {\n            delimiters: \", \", // add new tags when a comma or a space character is entered\n            maxTags: 10,\n            blacklist: [\"fuck\", \"shit\", \"pussy\"],\n            keepInvalidTags: true, // do not remove invalid tags (but keep them marked as invalid)\n            whitelist: [{\n                value: 'Chris Muller',\n                email: 'chris.muller@wix.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-11.jpg',\n                class: 'tagify__tag--primary'\n            }, {\n                value: 'Nick Bold',\n                email: 'nick.seo@gmail.com',\n                initials: 'SS',\n                initialsState: 'warning',\n                pic: ''\n            }, {\n                value: 'Alon Silko',\n                email: 'alon@keenthemes.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-6.jpg'\n            }, {\n                value: 'Sam Seanic',\n                email: 'sam.senic@loop.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-8.jpg'\n            }, {\n                value: 'Sara Loran',\n                email: 'sara.loran@tilda.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-9.jpg'\n            }, {\n                value: 'Eric Davok',\n                email: 'davok@mix.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-13.jpg'\n            }, {\n                value: 'Sam Seanic',\n                email: 'sam.senic@loop.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-13.jpg'\n            }, {\n                value: 'Lina Nilson',\n                email: 'lina.nilson@loop.com',\n                initials: 'LN',\n                initialsState: 'danger',\n                pic: './assets/media/users/150-15.jpg'\n            }],\n            templates: {\n                dropdownItem: function(tagData) {\n                    try {\n                        var html = '';\n\n                        html += '<div class=\"tagify__dropdown__item\">';\n                        html += '   <div class=\"d-flex align-items-center\">';\n                        html += '       <span class=\"symbol sumbol-' + (tagData.initialsState ? tagData.initialsState : '') + ' mr-2\" style=\"background-image: url(\\''+ (tagData.pic ? tagData.pic : '') + '\\')\">';\n                        html += '           <span class=\"symbol-label\">' + (tagData.initials ? tagData.initials : '') + '</span>';\n                        html += '       </span>';\n                        html += '       <div class=\"d-flex flex-column\">';\n                        html += '           <a href=\"#\" class=\"text-dark-75 text-hover-primary font-weight-bold\">'+ (tagData.value ? tagData.value : '') + '</a>';\n                        html += '           <span class=\"text-muted font-weight-bold\">' + (tagData.email ? tagData.email : '') + '</span>';\n                        html += '       </div>';\n                        html += '   </div>';\n                        html += '</div>';\n\n                        return html;\n                    } catch (err) {}\n                }\n            },\n            transformTag: function(tagData) {\n                tagData.class = 'tagify__tag tagify__tag--primary';\n            },\n            dropdown: {\n                classname: \"color-blue\",\n                enabled: 1,\n                maxItems: 5\n            }\n        });\n\n        var bccEl = KTUtil.find(formEl, '[name=compose_bcc]');\n        var tagifyBcc = new Tagify(bccEl, {\n            delimiters: \", \", // add new tags when a comma or a space character is entered\n            maxTags: 10,\n            blacklist: [\"fuck\", \"shit\", \"pussy\"],\n            keepInvalidTags: true, // do not remove invalid tags (but keep them marked as invalid)\n            whitelist: [{\n                value: 'Chris Muller',\n                email: 'chris.muller@wix.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-11.jpg',\n                class: 'tagify__tag--primary'\n            }, {\n                value: 'Nick Bold',\n                email: 'nick.seo@gmail.com',\n                initials: 'SS',\n                initialsState: 'warning',\n                pic: ''\n            }, {\n                value: 'Alon Silko',\n                email: 'alon@keenthemes.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-6.jpg'\n            }, {\n                value: 'Sam Seanic',\n                email: 'sam.senic@loop.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-8.jpg'\n            }, {\n                value: 'Sara Loran',\n                email: 'sara.loran@tilda.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-9.jpg'\n            }, {\n                value: 'Eric Davok',\n                email: 'davok@mix.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-13.jpg'\n            }, {\n                value: 'Sam Seanic',\n                email: 'sam.senic@loop.com',\n                initials: '',\n                initialsState: '',\n                pic: './assets/media/users/150-13.jpg'\n            }, {\n                value: 'Lina Nilson',\n                email: 'lina.nilson@loop.com',\n                initials: 'LN',\n                initialsState: 'danger',\n                pic: './assets/media/users/150-15.jpg'\n            }],\n            templates: {\n                dropdownItem: function(tagData) {\n                    try {\n                        var html = '';\n\n                        html += '<div class=\"tagify__dropdown__item\">';\n                        html += '   <div class=\"d-flex align-items-center\">';\n                        html += '       <span class=\"symbol sumbol-' + (tagData.initialsState ? tagData.initialsState : '') + ' mr-2\" style=\"background-image: url(\\''+ (tagData.pic ? tagData.pic : '') + '\\')\">';\n                        html += '           <span class=\"symbol-label\">' + (tagData.initials ? tagData.initials : '') + '</span>';\n                        html += '       </span>';\n                        html += '       <div class=\"d-flex flex-column\">';\n                        html += '           <a href=\"#\" class=\"text-dark-75 text-hover-primary font-weight-bold\">'+ (tagData.value ? tagData.value : '') + '</a>';\n                        html += '           <span class=\"text-muted font-weight-bold\">' + (tagData.email ? tagData.email : '') + '</span>';\n                        html += '       </div>';\n                        html += '   </div>';\n                        html += '</div>';\n\n                        return html;\n                    } catch (err) {}\n                }\n            },\n            transformTag: function(tagData) {\n                tagData.class = 'tagify__tag tagify__tag--primary';\n            },\n            dropdown: {\n                classname: \"color-blue\",\n                enabled: 1,\n                maxItems: 5\n            }\n        });\n\n        // CC input show\n        KTUtil.on(formEl, '[data-inbox=\"cc-show\"]', 'click', function(e) {\n            var inputEl = KTUtil.find(formEl, '.inbox-to-cc');\n            KTUtil.removeClass(inputEl, 'd-none');\n            KTUtil.addClass(inputEl, 'd-flex');\n            KTUtil.find(formEl, \"[name=compose_cc]\").focus();\n        });\n\n        // CC input hide\n        KTUtil.on(formEl, '[data-inbox=\"cc-hide\"]', 'click', function(e) {\n            var inputEl = KTUtil.find(formEl, '.inbox-to-cc');\n            KTUtil.removeClass(inputEl, 'd-flex');\n            KTUtil.addClass(inputEl, 'd-none');\n        });\n\n        // BCC input show\n        KTUtil.on(formEl, '[data-inbox=\"bcc-show\"]', 'click', function(e) {\n            var inputEl = KTUtil.find(formEl, '.inbox-to-bcc');\n            KTUtil.removeClass(inputEl, 'd-none');\n            KTUtil.addClass(inputEl, 'd-flex');\n            KTUtil.find(formEl, \"[name=compose_bcc]\").focus();\n        });\n\n        // BCC input hide\n        KTUtil.on(formEl, '[data-inbox=\"bcc-hide\"]', 'click', function(e) {\n            var inputEl = KTUtil.find(formEl, '.inbox-to-bcc');\n            KTUtil.removeClass(inputEl, 'd-flex');\n            KTUtil.addClass(inputEl, 'd-none');\n        });\n    }\n\n    var _initAttachments = function(elemId) {\n        var id = \"#\" + elemId;\n        var previewNode = $(id + \" .dropzone-item\");\n        previewNode.id = \"\";\n        var previewTemplate = previewNode.parent('.dropzone-items').html();\n        previewNode.remove();\n\n        var myDropzone = new Dropzone(id, { // Make the whole body a dropzone\n            url: \"https://keenthemes.com/scripts/void.php\", // Set the url for your upload script location\n            parallelUploads: 20,\n            maxFilesize: 1, // Max filesize in MB\n            previewTemplate: previewTemplate,\n            previewsContainer: id + \" .dropzone-items\", // Define the container to display the previews\n            clickable: id + \"_select\" // Define the element that should be used as click trigger to select files.\n        });\n\n        myDropzone.on(\"addedfile\", function(file) {\n            // Hookup the start button\n            $(document).find(id + ' .dropzone-item').css('display', '');\n        });\n\n        // Update the total progress bar\n        myDropzone.on(\"totaluploadprogress\", function(progress) {\n            document.querySelector(id + \" .progress-bar\").style.width = progress + \"%\";\n        });\n\n        myDropzone.on(\"sending\", function(file) {\n            // Show the total progress bar when upload starts\n            document.querySelector(id + \" .progress-bar\").style.opacity = \"1\";\n        });\n\n        // Hide the total progress bar when nothing's uploading anymore\n        myDropzone.on(\"complete\", function(progress) {\n            var thisProgressBar = id + \" .dz-complete\";\n            setTimeout(function() {\n                $(thisProgressBar + \" .progress-bar, \" + thisProgressBar + \" .progress\").css('opacity', '0');\n            }, 300)\n        });\n    }\n\n    // Public methods\n    return {\n        // Public functions\n        init: function() {\n            // Init variables\n            _asideEl = KTUtil.getById('kt_inbox_aside');\n            _listEl = KTUtil.getById('kt_inbox_list');\n            _viewEl = KTUtil.getById('kt_inbox_view');\n            _composeEl = KTUtil.getById('kt_inbox_compose');\n            _replyEl = KTUtil.getById('kt_inbox_reply');\n\n            // Init handlers\n            KTAppInbox.initAside();\n            KTAppInbox.initList();\n            KTAppInbox.initView();\n            KTAppInbox.initReply();\n            KTAppInbox.initCompose();\n        },\n\n        initAside: function() {\n            // Mobile offcanvas for mobile mode\n            _asideOffcanvas = new KTOffcanvas(_asideEl, {\n                overlay: true,\n                baseClass: 'offcanvas-mobile',\n                //closeBy: 'kt_inbox_aside_close',\n                toggleBy: 'kt_subheader_mobile_toggle'\n            });\n\n            // View list\n            KTUtil.on(_asideEl, '.list-item[data-action=\"list\"]', 'click', function(e) {\n                var type = KTUtil.attr(this, 'data-type');\n                var listItemsEl = KTUtil.find(_listEl, '.kt-inbox__items');\n                var navItemEl = this.closest('.kt-nav__item');\n                var navItemActiveEl = KTUtil.find(_asideEl, '.kt-nav__item.kt-nav__item--active');\n\n                // demo loading\n                var loading = new KTDialog({\n                    'type': 'loader',\n                    'placement': 'top center',\n                    'message': 'Loading ...'\n                });\n                loading.show();\n\n                setTimeout(function() {\n                    loading.hide();\n\n                    KTUtil.css(_listEl, 'display', 'flex'); // show list\n                    KTUtil.css(_viewEl, 'display', 'none'); // hide view\n\n                    KTUtil.addClass(navItemEl, 'kt-nav__item--active');\n                    KTUtil.removeClass(navItemActiveEl, 'kt-nav__item--active');\n\n                    KTUtil.attr(listItemsEl, 'data-type', type);\n                }, 600);\n            });\n        },\n\n        initList: function() {\n            // View message\n            KTUtil.on(_listEl, '[data-inbox=\"message\"]', 'click', function(e) {\n                var actionsEl = KTUtil.find(this, '[data-inbox=\"actions\"]');\n\n                // skip actions click\n                if (e.target === actionsEl || (actionsEl && actionsEl.contains(e.target) === true)) {\n                    return false;\n                }\n\n                // Demo loading\n                var loading = new KTDialog({\n                    'type': 'loader',\n                    'placement': 'top center',\n                    'message': 'Loading ...'\n                });\n                loading.show();\n\n                setTimeout(function() {\n                    loading.hide();\n\n                    KTUtil.addClass(_listEl, 'd-none');\n                    KTUtil.removeClass(_listEl, 'd-block');\n\n                    KTUtil.addClass(_viewEl, 'd-block');\n                    KTUtil.removeClass(_viewEl, 'd-none');\n                }, 700);\n            });\n\n            // Group selection\n            KTUtil.on(_listEl, '[data-inbox=\"group-select\"] input', 'click', function() {\n                var messages = KTUtil.findAll(_listEl, '[data-inbox=\"message\"]');\n\n                for (var i = 0, j = messages.length; i < j; i++) {\n                    var message = messages[i];\n                    var checkbox = KTUtil.find(message, '.checkbox input');\n                    checkbox.checked = this.checked;\n\n                    if (this.checked) {\n                        KTUtil.addClass(message, 'active');\n                    } else {\n                        KTUtil.removeClass(message, 'active');\n                    }\n                }\n            });\n\n            // Individual selection\n            KTUtil.on(_listEl, '[data-inbox=\"message\"] [data-inbox=\"actions\"] .checkbox input', 'click', function() {\n                var item = this.closest('[data-inbox=\"message\"]');\n\n                if (item && this.checked) {\n                    KTUtil.addClass(item, 'active');\n                } else {\n                    KTUtil.removeClass(item, 'active');\n                }\n            });\n        },\n\n        initView: function() {\n            // Back to listing\n            KTUtil.on(_viewEl, '[data-inbox=\"back\"]', 'click', function() {\n                // demo loading\n                var loading = new KTDialog({\n                    'type': 'loader',\n                    'placement': 'top center',\n                    'message': 'Loading ...'\n                });\n\n                loading.show();\n\n                setTimeout(function() {\n                    loading.hide();\n\n                    KTUtil.addClass(_listEl, 'd-block');\n                    KTUtil.removeClass(_listEl, 'd-none');\n\n                    KTUtil.addClass(_viewEl, 'd-none');\n                    KTUtil.removeClass(_viewEl, 'd-block');\n                }, 700);\n            });\n\n            // Expand/Collapse reply\n            KTUtil.on(_viewEl, '[data-inbox=\"message\"]', 'click', function(e) {\n                var message = this.closest('[data-inbox=\"message\"]');\n\n                var dropdownToggleEl = KTUtil.find(this, '[data-toggle=\"dropdown\"]');\n                var toolbarEl = KTUtil.find(this, '[data-inbox=\"toolbar\"]');\n\n                // skip dropdown toggle click\n                if (e.target === dropdownToggleEl || (dropdownToggleEl && dropdownToggleEl.contains(e.target) === true)) {\n                    return false;\n                }\n\n                // skip group actions click\n                if (e.target === toolbarEl || (toolbarEl && toolbarEl.contains(e.target) === true)) {\n                    return false;\n                }\n\n                if (KTUtil.hasClass(message, 'toggle-on')) {\n                    KTUtil.addClass(message, 'toggle-off');\n                    KTUtil.removeClass(message, 'toggle-on');\n                } else {\n                    KTUtil.removeClass(message, 'toggle-off');\n                    KTUtil.addClass(message, 'toggle-on');\n                }\n            });\n        },\n\n        initReply: function() {\n            _initEditor(_replyEl, 'kt_inbox_reply_editor');\n            _initAttachments('kt_inbox_reply_attachments');\n            _initForm('kt_inbox_reply_form');\n        },\n\n        initCompose: function() {\n            _initEditor(_composeEl, 'kt_inbox_compose_editor');\n            _initAttachments('kt_inbox_compose_attachments');\n            _initForm('kt_inbox_compose_form');\n\n            // Remove reply form\n            KTUtil.on(_composeEl, '[data-inbox=\"dismiss\"]', 'click', function(e) {\n                swal.fire({\n                    text: \"Are you sure to discard this message ?\",\n                    type: \"danger\",\n                    buttonsStyling: false,\n                    confirmButtonText: \"Discard draft\",\n                    confirmButtonClass: \"btn btn-danger\",\n                    showCancelButton: true,\n                    cancelButtonText: \"Cancel\",\n                    cancelButtonClass: \"btn btn-light-primary\"\n                }).then(function(result) {\n                    $(_composeEl).modal('hide');\n                });\n            });\n        }\n    };\n}();\n\n// Class Initialization\njQuery(document).ready(function() {\n    KTAppInbox.init();\n});\n"],"sourceRoot":""}