{"version":3,"sources":["webpack://keen/../demo1/src/js/pages/features/cards/tools.js"],"names":[],"mappings":";;;;;;AAAa;;AAEb;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA,iEAAiE;AACjE,SAAS;;AAET;AACA;AACA;AACA,aAAa;AACb,SAAS;;AAET;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;;AAEb;;AAEA;AACA;AACA,aAAa;AACb,SAAS;AACT;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,CAAC","file":"js/pages/features/cards/tools.js","sourcesContent":["\"use strict\";\n\nvar KTCardTools = function () {\n    // Toastr\n    var initToastr = function() {\n        toastr.options.showDuration = 1000;\n    }\n\n    // Demo 1\n    var demo1 = function() {\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\n        var card = new KTCard('kt_card_1');\n\n        // Toggle event handlers\n        card.on('beforeCollapse', function(card) {\n            setTimeout(function() {\n                toastr.info('Before collapse event fired!');\n            }, 100);\n        });\n\n        card.on('afterCollapse', function(card) {\n            setTimeout(function() {\n                toastr.warning('Before collapse event fired!');\n            }, 2000);\n        });\n\n        card.on('beforeExpand', function(card) {\n            setTimeout(function() {\n                toastr.info('Before expand event fired!');\n            }, 100);\n        });\n\n        card.on('afterExpand', function(card) {\n            setTimeout(function() {\n                toastr.warning('After expand event fired!');\n            }, 2000);\n        });\n\n        // Remove event handlers\n        card.on('beforeRemove', function(card) {\n            toastr.info('Before remove event fired!');\n\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\n        });\n\n        card.on('afterRemove', function(card) {\n            setTimeout(function() {\n                toastr.warning('After remove event fired!');\n            }, 2000);\n        });\n\n        // Reload event handlers\n        card.on('reload', function(card) {\n            toastr.info('Leload event fired!');\n\n            KTApp.block(card.getSelf(), {\n                overlayColor: '#ffffff',\n                type: 'loader',\n                state: 'primary',\n                opacity: 0.3,\n                size: 'lg'\n            });\n\n            // update the content here\n\n            setTimeout(function() {\n                KTApp.unblock(card.getSelf());\n            }, 2000);\n        });\n    }\n\n    // Demo 2\n    var demo2 = function() {\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\n        var card = new KTCard('kt_card_2');\n\n        // Toggle event handlers\n        card.on('beforeCollapse', function(card) {\n            setTimeout(function() {\n                toastr.info('Before collapse event fired!');\n            }, 100);\n        });\n\n        card.on('afterCollapse', function(card) {\n            setTimeout(function() {\n                toastr.warning('Before collapse event fired!');\n            }, 2000);\n        });\n\n        card.on('beforeExpand', function(card) {\n            setTimeout(function() {\n                toastr.info('Before expand event fired!');\n            }, 100);\n        });\n\n        card.on('afterExpand', function(card) {\n            setTimeout(function() {\n                toastr.warning('After expand event fired!');\n            }, 2000);\n        });\n\n        // Remove event handlers\n        card.on('beforeRemove', function(card) {\n            toastr.info('Before remove event fired!');\n\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\n        });\n\n        card.on('afterRemove', function(card) {\n            setTimeout(function() {\n                toastr.warning('After remove event fired!');\n            }, 2000);\n        });\n\n        // Reload event handlers\n        card.on('reload', function(card) {\n            toastr.info('Leload event fired!');\n\n            KTApp.block(card.getSelf(), {\n                overlayColor: '#000000',\n                type: 'spinner',\n                state: 'primary',\n                opacity: 0.05,\n                size: 'lg'\n            });\n\n            // update the content here\n\n            setTimeout(function() {\n                KTApp.unblock(card.getSelf());\n            }, 2000);\n        });\n    }\n\n    // Demo 3\n    var demo3 = function() {\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\n        var card = new KTCard('kt_card_3');\n\n        // Toggle event handlers\n        card.on('beforeCollapse', function(card) {\n            setTimeout(function() {\n                toastr.info('Before collapse event fired!');\n            }, 100);\n        });\n\n        card.on('afterCollapse', function(card) {\n            setTimeout(function() {\n                toastr.warning('Before collapse event fired!');\n            }, 2000);\n        });\n\n        card.on('beforeExpand', function(card) {\n            setTimeout(function() {\n                toastr.info('Before expand event fired!');\n            }, 100);\n        });\n\n        card.on('afterExpand', function(card) {\n            setTimeout(function() {\n                toastr.warning('After expand event fired!');\n            }, 2000);\n        });\n\n        // Remove event handlers\n        card.on('beforeRemove', function(card) {\n            toastr.info('Before remove event fired!');\n\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\n        });\n\n        card.on('afterRemove', function(card) {\n            setTimeout(function() {\n                toastr.warning('After remove event fired!');\n            }, 2000);\n        });\n\n        // Reload event handlers\n        card.on('reload', function(card) {\n            toastr.info('Leload event fired!');\n\n            KTApp.block(card.getSelf(), {\n                type: 'loader',\n                state: 'success',\n                message: 'Please wait...'\n            });\n\n            // update the content here\n\n            setTimeout(function() {\n                KTApp.unblock(card.getSelf());\n            }, 2000);\n        });\n    }\n\n    // Demo 4\n    var demo4 = function() {\n        // This card is lazy initialized using data-card=\"true\" attribute. You can access to the card object as shown below and override its behavior\n        var card = new KTCard('kt_card_4');\n\n        // Toggle event handlers\n        card.on('beforeCollapse', function(card) {\n            setTimeout(function() {\n                toastr.info('Before collapse event fired!');\n            }, 100);\n        });\n\n        card.on('afterCollapse', function(card) {\n            setTimeout(function() {\n                toastr.warning('Before collapse event fired!');\n            }, 2000);\n        });\n\n        card.on('beforeExpand', function(card) {\n            setTimeout(function() {\n                toastr.info('Before expand event fired!');\n            }, 100);\n        });\n\n        card.on('afterExpand', function(card) {\n            setTimeout(function() {\n                toastr.warning('After expand event fired!');\n            }, 2000);\n        });\n\n        // Remove event handlers\n        card.on('beforeRemove', function(card) {\n            toastr.info('Before remove event fired!');\n\n            return confirm('Are you sure to remove this card ?');  // remove card after user confirmation\n        });\n\n        card.on('afterRemove', function(card) {\n            setTimeout(function() {\n                toastr.warning('After remove event fired!');\n            }, 2000);\n        });\n\n        // Reload event handlers\n        card.on('reload', function(card) {\n            toastr.info('Leload event fired!');\n\n            KTApp.block(card.getSelf(), {\n                type: 'loader',\n                state: 'primary',\n                message: 'Please wait...'\n            });\n\n            // update the content here\n\n            setTimeout(function() {\n                KTApp.unblock(card.getSelf());\n            }, 2000);\n        });\n    }\n\n    return {\n        //main function to initiate the module\n        init: function () {\n            initToastr();\n\n            // init demos\n            demo1();\n            demo2();\n            demo3();\n            demo4();\n        }\n    };\n}();\n\njQuery(document).ready(function() {\n    KTCardTools.init();\n});\n"],"sourceRoot":""}